/* Generated By:JavaCC: Do not edit this line. QBasicConstants.java */
package compiler;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface QBasicConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 3;
  /** RegularExpression Id. */
  int PRINT = 4;
  /** RegularExpression Id. */
  int INPUT = 5;
  /** RegularExpression Id. */
  int ELSE_IF = 6;
  /** RegularExpression Id. */
  int IF = 7;
  /** RegularExpression Id. */
  int THEN = 8;
  /** RegularExpression Id. */
  int ELSE = 9;
  /** RegularExpression Id. */
  int ENDIF = 10;
  /** RegularExpression Id. */
  int FOR = 11;
  /** RegularExpression Id. */
  int NEXT = 12;
  /** RegularExpression Id. */
  int TO = 13;
  /** RegularExpression Id. */
  int STEP = 14;
  /** RegularExpression Id. */
  int DO = 15;
  /** RegularExpression Id. */
  int LOOP = 16;
  /** RegularExpression Id. */
  int WHILE = 17;
  /** RegularExpression Id. */
  int UNTIL = 18;
  /** RegularExpression Id. */
  int END = 19;
  /** RegularExpression Id. */
  int PLUS = 20;
  /** RegularExpression Id. */
  int MUL = 21;
  /** RegularExpression Id. */
  int POW = 22;
  /** RegularExpression Id. */
  int SQR = 23;
  /** RegularExpression Id. */
  int AND = 24;
  /** RegularExpression Id. */
  int OR = 25;
  /** RegularExpression Id. */
  int CONDITIONAL_OPS = 26;
  /** RegularExpression Id. */
  int LETTER = 27;
  /** RegularExpression Id. */
  int DIGIT = 28;
  /** RegularExpression Id. */
  int INT = 29;
  /** RegularExpression Id. */
  int VAR_TYPE = 30;
  /** RegularExpression Id. */
  int STRING_VAR = 31;
  /** RegularExpression Id. */
  int NUMBER_VAR = 32;
  /** RegularExpression Id. */
  int VAR = 33;
  /** RegularExpression Id. */
  int NUM = 34;
  /** RegularExpression Id. */
  int STRING = 35;
  /** RegularExpression Id. */
  int ENDL = 36;
  /** RegularExpression Id. */
  int UNDERSCORE = 37;
  /** RegularExpression Id. */
  int SEMICOLON = 38;
  /** RegularExpression Id. */
  int RP = 39;
  /** RegularExpression Id. */
  int LP = 40;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\t\"",
    "\" \"",
    "<SINGLE_LINE_COMMENT>",
    "\"PRINT \"",
    "\"INPUT \"",
    "\"ELSE IF \"",
    "\"IF \"",
    "<THEN>",
    "<ELSE>",
    "\"END IF\"",
    "\"FOR \"",
    "\"NEXT \"",
    "\" TO \"",
    "\" STEP \"",
    "<DO>",
    "<LOOP>",
    "\"WHILE \"",
    "\"UNTIL \"",
    "\"END\"",
    "<PLUS>",
    "<MUL>",
    "\"^\"",
    "\"SQR\"",
    "\"AND\"",
    "\"OR\"",
    "<CONDITIONAL_OPS>",
    "<LETTER>",
    "<DIGIT>",
    "<INT>",
    "<VAR_TYPE>",
    "<STRING_VAR>",
    "<NUMBER_VAR>",
    "<VAR>",
    "<NUM>",
    "<STRING>",
    "<ENDL>",
    "\"_\"",
    "\";\"",
    "\")\"",
    "\"(\"",
  };

}
